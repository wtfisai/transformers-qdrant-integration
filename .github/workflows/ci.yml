name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Free up disk space
      run: |
        echo "Initial disk space:"
        df -h

        # Remove large packages and directories
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo swapoff -a
        sudo rm -f /swapfile

        echo "Disk space after cleanup:"
        df -h

    - name: Free up disk space
      run: |
        echo "Initial disk space:"
        df -h

        # Remove large packages and directories
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo rm -rf /var/lib/apt/lists/*
        sudo find / -name "__pycache__" -type d -exec rm -r {} +

        echo "Disk space after cleanup:"
        df -h

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip cache purge
        pip install -r requirements.txt pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=./ --cov-report=xml
      env:
        QDRANT_URL: ${{ secrets.QDRANT_URL }}
        QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Build package
      run: |
        pip install build
        python -m build
    
    # Uncomment this step if you want to publish to PyPI
    # - name: Publish to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}
